html
  head
    link(href='../modular_folder/mapview/map2.css' rel='stylesheet' type='text/css')
  body
    link(rel='stylesheet' href='https://unpkg.com/leaflet@1.7.1/dist/leaflet.css' integrity='sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==' crossorigin='')
    style.
      html,
      body {
      width: 100%;
      height: 100%;
      font-size: 50px;
      }
      #map {
      top: 0vh;
      width: 100%;
      height: 100%;
      position: relative;
      z-index: 1;
      }
    button#exit_button
      a(href='https://luffy.ee.ncku.edu.tw:38443/ts/home')
        img(src='../modular_folder/mapview/map2.png')
    #hungun
      #distance
        bl#info
        bl#info2
        b1#info3(style='font-size: 100px')
    #map
    // Make sure you put this AFTER Leaflet's CSS
    script(src='https://unpkg.com/leaflet@1.7.1/dist/leaflet.js' integrity='sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==' crossorigin='')
    script(language='JavaScript').
      function ShowTime() {
      if (document.getElementById("info").hidden === false)
      var NowDate = new Date();
      var s = NowDate.getSeconds();
      //document.getElementById('info2').innerHTML = s + 's';
      //setTimeout('ShowTime()', 1000);//decide max time
      }
    script(src='https://code.jquery.com/jquery-3.3.1.min.js')      
    script.
      var NowDate;
      var s;
      var map;
      // var radius;
      var now_lat;
      var now_lng;
      var marker_array = new Array;
      var animal_id = -1;
      map = L.map('map').setView([22.5, 120.5], 15);//construct map
      map.locate({ setView: true, watch: true, enableHighAccuracy: true });
      map.removeControl(map.zoomControl);
      L.control.scale({ imperial: false }).addTo(map);
      L.control.zoom({
      position: 'topright',
      //zoomInTitle: 'increase',
      //zoomOutTitle: 'decrese'
      }).addTo(map);
      var customIcon1 = L.icon({
      iconUrl: '../modular_folder/mapview/65.png',
      iconSize: [150, 150], // size of the icon
      iconAnchor: [150, 20], // point of the icon which will correspond to marker's location
      popupAnchor: [0, -40] // point from which the popup should open relative to the iconAnchor
      });
      var customIcon2 = L.icon({
      iconUrl: '../modular_folder/mapview/66.png',
      iconSize: [150, 150], // size of the icon
      iconAnchor: [150, 20], // point of the icon which will correspond to marker's location
      popupAnchor: [0, -40] // point from which the popup should open relative to the iconAnchor
      });
      var customIcon3 = L.icon({
      iconUrl: '../modular_folder/mapview/67.png',
      iconSize: [150, 150], // size of the icon
      iconAnchor: [150, 20], // point of the icon which will correspond to marker's location
      popupAnchor: [0, -40] // point from which the popup should open relative to the iconAnchor
      });
      var customIcon_1 = L.icon({
      iconUrl: '../modular_folder/mapview/63.png',
      iconSize: [150, 150], // size of the icon
      iconAnchor: [150, 20], // point of the icon which will correspond to marker's location
      popupAnchor: [0, -40] // point from which the popup should open relative to the iconAnchor
      });
      var gpsMarker = null;
      var gpsCircleMarker;
      function onLocationFound(e) {
      console.log(e)
      now_lat = e.latlng.lat;
      now_lng = e.latlng.lng;
      var radius = e.accuracy / 2;
      var popupContent = "You are within " + radius + " meters from this point";
      if (gpsMarker == null) {
      if(animal_id==1){
      gpsMarker = L.marker(e.latlng, { icon: customIcon1 }).addTo(map);
      }
      if(animal_id==2){
      gpsMarker = L.marker(e.latlng, { icon: customIcon2 }).addTo(map);
      }
      if(animal_id==3){
      gpsMarker = L.marker(e.latlng, { icon: customIcon3 }).addTo(map);
      }
      if(animal_id==-1){
      gpsMarker = L.marker(e.latlng, { icon: customIcon_1 }).addTo(map);
      }
      gpsMarker.bindPopup("You might be " + radius + " meters from this point").openPopup();
      gpsCircleMarker = L.circle(e.latlng, radius).addTo(map);
      }
      else {
      gpsMarker.getPopup().setContent(popupContent);
      gpsMarker.setLatLng(e.latlng);
      gpsCircleMarker.setLatLng(e.latlng);
      gpsCircleMarker.setRadius(radius);
      }
      //document.getElementById('info').innerHTML = `you are at ( lat : ${e.latlng.lat} lng : ${e.latlng.lng} ) with accuracy ${e.accuracy} m!`
      ShowTime()
      var marker = L.marker(L.latLng(22.9998, 120.215));
      marker.bindPopup("<b>NCKU</b><br>the BEST University in south Taiwan").openPopup();
      marker.addTo(map);
      console.log(e.latlng)
      console.log(marker._latlng)
      // var latlng = L.latLng(40, 112);
      // var _distance = L.GeometryUtil.distance(map, from, to);
      // var d2 = latlng.distanceTo(L.latLng(44, 115));
      // let dis = e.distanceTo(marker.LatLng);
      //document.getElementById('info3').innerHTML =_distance;
      //var dis = e.distanceTo(marker.latLng);
      //document.getElementById('info3').innerHTML = e.latlng.distanceTo(marker._latlng);
      //distance2= e.latlng.distanceTo(marker._latlng);
      if (last != current) {
      last = e.latlng
      }
      current = e.latlng;
      distance2 = last.distanceTo(current);
      last = current;
      console.log(distance2)
      distance1 += distance2;
      }
      var current;
      var last;
      var distance1;
      var distance2;
      setTimeout(function () {
      distance1 = 0;
      distance2 = 0;
      currrent = NaN;
      last = NaN;
      }, 0)
      setInterval(function () {
      console.log(distance1)
      console.log(distance2)
      console.log(last)
      console.log("hhh")
      console.log(current)
      document.getElementById('info3').innerHTML = '距離' + Math.floor(distance1) + 'm';
      }, 2000);
      function onLocationError(e) {
      alert(e.message);
      }
      map.on('locationerror', onLocationError);
      map.on('locationfound', onLocationFound);
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '<a href="https://www.openstreetmap.org/">OSM</a>',
      maxZoom: 19,
      }).addTo(map);
      $(document).ready(function () {///////////////////////////////////////////////added at 6/2
      setTimeout(function () {
      $.get('/app/personal/', {
      }, (user) => {
      if (user) {
      var me = JSON.parse(user)
      animal_id=me.animal
      }
      }
      )
      }, 0)
      var search_radius = 300;
      console.log("lat")
      console.log(now_lat)
      console.log("lng")
      console.log(now_lng)
      setInterval(function () {
      $.get('/app/PeopleOnMap/', {
      distance: search_radius,
      position: JSON.stringify({"lat": now_lat, "lng": now_lng})
      }, (People) => {
      if (People) {
      var people = JSON.parse(People)
      /*people:[{
      "id" = ""
      "name" = ""
      "animal" = 1
      "position" = {lat:,lng:}
      },
      ]*/
      //做事
      for (var i = 0; i < marker_array.length; i++) {
      if (marker_array != null) {
      map.removeLayer(marker_array[i])
      }
      }
      for (var i = 0; i < people.length; i++) {
      var temp_latlng = L.latLng(people[i].position.lat, people[i].position.lng);
      if (people[i].animal == 1) {
      marker_array[i] = L.marker(temp_latlng, { icon: customIcon1 }).addTo(map);
      gpsMarker.bindPopup(people[i].name).openPopup();
      }
      if (people[i].animal == 2) {
      marker_array[i] = L.marker(temp_latlng, { icon: customIcon2 }).addTo(map);
      gpsMarker.bindPopup(people[i].name).openPopup();
      }
      if (people[i].animal == 3) {
      marker_array[i] = L.marker(temp_latlng, { icon: customIcon3 }).addTo(map);
      gpsMarker.bindPopup(people[i].name).openPopup();
      }
      if (people[i].animal == -1) {
      marker_array[i] = L.marker(temp_latlng, { icon: customIcon_1 }).addTo(map);
      gpsMarker.bindPopup(people[i].name).openPopup();
      }
      }
      }
      }
      )
      }, 10000)
      setInterval(function () {
      $.post('/app/PeopleOnMap/', {
      animal: animal_id,
      position: JSON.stringify({"lat": now_lat, "lng": now_lng})
      }, (id) => {
      if (id) {
      //不一定用的到
      }
      }
      )
      }, 10000)
      });
    script(src='https://makinacorpus.github.io/Leaflet.GeometryUtil/leaflet.geometryutil.js')
